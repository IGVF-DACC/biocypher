Title: BioCypher graph schema configuration file

# This configuration file establishes the hierarchy and connectivity in a newly
# set-up BioCypher property graph database. Naming should adhere to Biolink
# nomenclature (available at https://biolink.github.io/biolink-model/ or via 
# the python module 'biolink-model-toolkit').

# The BioCypher YAML file specifies only the leaves of the hierarchy tree of
# the desired graph; the hierarchical structure of entities will be derived 
# from the Biolink model. Thus, only the immediate constituents of the graph
# need to be specified in the schema config.


# ---
# "Named Things"
# ---
# The implementation of named things is fairly straightforward, since they are
# usually represented in node form, which is also the Biolink recommendation.
# The same is not true for associations.
#
# A little more complex is the representation of aggregates of named things, 
# for instance in the case of functional protein complexes. These are represented
# by so-called "mixins", which are not officially part of the hierarchy.

Protein: # this is the Biolink entity name and will be used as the node label
         # do not modify or else the Biolink translation will fail
  represented_as: node
  preferred_id: UniProtKB # this is the Biolink spelling of the identifier used
  # it represents a CURIE URI prefix
  label_in_input: protein # modify this to allow translation
  # this is the entity name (ie, type) in the input database
  
Drug:
  represented_as: node
  preferred_id: PUBCHEM
  label_in_input: drug

microRNA:
  represented_as: node
  preferred_id: MIR
  label_in_input: mirna
    
MacromolecularComplexMixin:
  represented_as: node
  preferred_id: CPX
  label_in_input: complex

OrganismTaxon:
  represented_as: node
  preferred_id: NCBITaxon
  label_in_input: taxon

Publication:
  represented_as: node
  preferred_id: NLMID
ConfidenceLevel:
  represented_as: node
  preferred_id: None

Disease:
  represented_as: node
  preferred_id: ICD10


# ---
# Associations
# ---
# Associations are not supposed to be represented in node form as per the 
# specifications of Biolink. However, in an analytic context, it often makes 
# sense to represent interactions as nodes in Neo4j, because it enables, for
# instance, the annotation of a relationship with a publication as source of
# evidence. The Biolink specifications for these types of relationships do 
# not go into depth; for example, the hierarchy for molecular interactions
# (ie, "associations") ends at "PairwiseMolecularInteraction", there are no 
# explicit terms for protein-protein-interaction, phosphorylation, miRNA-
# targeting, etc. Biolink proposes to use interaction identifiers from 
# ontologies, such as https://www.ebi.ac.uk/ols/ontologies/mi/.

PairwiseMolecularInteraction:
  represented_as: node
  preferred_id: EBI

DiseaseToEntityAssociationMixin:
  represented_as: edge
  preferred_id: tbd
  source: Disease
  target: Protein
EntityToDiseaseAssociationMixin:
  represented_as: edge
  preferred_id: tbd
  source: Protein
  target: Disease


# below not in biolink
# will insert into custom biolink yaml, get hierarchy from there
PostTranslationalInteraction:
  represented_as: edge
  preferred_id: tbd
  source: Protein 
  # optional other sources/targets?
  # source and target need to adhere to Biolink naming, otherwise the
  # meta-graph will not work
  target: Protein
  label_in_input: post_translational
  label_as_edge: INTERACTS_POST_TRANSLATIONAL
Phosphorylation:
  represented_as: edge
  preferred_id: tbd
  source: Protein
  target: Protein
Acetylation:
  represented_as: edge
  preferred_id: tbd
  source: Protein
  target: Protein
      
PostTranscriptionalInteraction:
  represented_as: edge
  preferred_id: tbd
  source: microRNA
  target: Protein
  label_in_input: post_transcriptional
  label_as_edge: INTERACTS_POST_TRANSCRIPTIONAL



## CROssBAR list of source database attributes
# UniProtKB (related MongoDB collections: Proteins):
# accession(protein,UniProt)
# ec
# fullName
# gene(symbol)
# go
# interpro
# omim
# orphanet
# pfam
# reactome
# taxId

# IntAct (related MongoDB collections: Intact):
# accession(protein,UniProt)
# confidence
# gene(symbol)

# EFO (related MongoDB collections: EFO disease terms):
# doid
# label
# mesh
# oboId
# omimId
# synonym

# HPO (related MongoDB collections: HPO):
# genesymbol
# hpotermname
# synonym

# ChEMBL (related MongoDB collections: Molecules, Targets, Assays, Activities):
# assayChemblId
# assayType
# assayOrganism
# moleculeChemblId
# canonicalSmiles
# inchiKey
# pchemblValue
# targetChemblId
# accession(protein,UniProt)
# targetIds
# DrugBank (related MongoDB collections: Drugs):
# accession(target protein,UniProt)
# chemblId
# identifier
# name
# pubchemCid

# PubChem (related MongoDB collections: PubChem Bioassay Sids, PubChem Biossays, PubChem Compounds, PubChem Substances):
# canonicalSmiles
# cid
# inchiKey
# accession(target protein,UniProt)
# assayPubchemId
# ncbiProteinId
# sids
# outcome